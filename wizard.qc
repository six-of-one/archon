/*
==============================================================================

WIZARD

==============================================================================
*/

$cd id1/models/a_wizard
$origin 0 0 24
$base wizbase
$skin wizbase

// std wiz
$frame hover1 hover2 hover3 hover4 hover5 hover6 hover7 hover8
$frame hover9 hover10 hover11 hover12 hover13 hover14 hover15

$frame fly1 fly2 fly3 fly4 fly5 fly6 fly7 fly8 fly9 fly10
$frame fly11 fly12 fly13 fly14

$frame magatt1 magatt2 magatt3 magatt4 magatt5 magatt6 magatt7
$frame magatt8 magatt9 magatt10 magatt11 magatt12 magatt13

$frame pain1 pain2 pain3 pain4

$frame death1 death2 death3 death4 death5 death6 death7 death8

// 2 headed wiz
$frame thhover1 thhover2 thhover3 thhover4 thhover5 thhover6 thhover7 thhover8
$frame thhover9 thhover10 thhover11 thhover12 thhover13 thhover14 thhover15

$frame thfly1 thfly2 thfly3 thfly4 thfly5 thfly6 thfly7 thfly8 thfly9 thfly10
$frame thfly11 thfly12 thfly13 thfly14

$frame thmagatt1 thmagatt2 thmagatt3 thmagatt4 thmagatt5 thmagatt6 thmagatt7
$frame thmagatt8 thmagatt9 thmagatt10 thmagatt11 thmagatt12 thmagatt13

$frame thpain1 thpain2 thpain3 thpain4

$frame thdeath1 thdeath2 thdeath3 thdeath4 thdeath5 thdeath6 thdeath7 thdeath8

// spike wiz
$frame sxhover1 sxhover2 sxhover3 sxhover4 sxhover5 sxhover6 sxhover7 sxhover8
$frame sxhover9 sxhover10 sxhover11 sxhover12 sxhover13 sxhover14 sxhover15

$frame sxfly1 sxfly2 sxfly3 sxfly4 sxfly5 sxfly6 sxfly7 sxfly8 sxfly9 sxfly10
$frame sxfly11 sxfly12 sxfly13 sxfly14

$frame sxmagatt1 sxmagatt2 sxmagatt3 sxmagatt4 sxmagatt5 sxmagatt6 sxmagatt7
$frame sxmagatt8 sxmagatt9 sxmagatt10 sxmagatt11 sxmagatt12 sxmagatt13

$frame sxpain1 sxpain2 sxpain3 sxpain4

$frame sxdeath1 sxdeath2 sxdeath3 sxdeath4 sxdeath5 sxdeath6 sxdeath7 sxdeath8

// large spike wiz
$frame lsxhover1 lsxhover2 lsxhover3 lsxhover4 lsxhover5 lsxhover6 lsxhover7 lsxhover8
$frame lsxhover9 lsxhover10 lsxhover11 lsxhover12 lsxhover13 lsxhover14 lsxhover15

$frame lsxfly1 lsxfly2 lsxfly3 lsxfly4 lsxfly5 lsxfly6 lsxfly7 lsxfly8 lsxfly9 lsxfly10
$frame lsxfly11 lsxfly12 lsxfly13 lsxfly14

$frame lsxmagatt1 lsxmagatt2 lsxmagatt3 lsxmagatt4 lsxmagatt5 lsxmagatt6 lsxmagatt7
$frame lsxmagatt8 lsxmagatt9 lsxmagatt10 lsxmagatt11 lsxmagatt12 lsxmagatt13

$frame lsxpain1 lsxpain2 lsxpain3 lsxpain4

$frame lsxdeath1 lsxdeath2 lsxdeath3 lsxdeath4 lsxdeath5 lsxdeath6 lsxdeath7 lsxdeath8

// 3 head spike wiz
// note: no pain of death frames for these guys
$frame sx3hover1 sx3hover2 sx3hover3 sx3hover4 sx3hover5 sx3hover6 sx3hover7 sx3hover8
$frame sx3hover9 sx3hover10 sx3hover11 sx3hover12 sx3hover13 sx3hover14 sx3hover15

$frame sx3fly1 sx3fly2 sx3fly3 sx3fly4 sx3fly5 sx3fly6 sx3fly7 sx3fly8 sx3fly9 sx3fly10
$frame sx3fly11 sx3fly12 sx3fly13 sx3fly14

$frame sx3magatt1 sx3magatt2 sx3magatt3 sx3magatt4 sx3magatt5 sx3magatt6 sx3magatt7
$frame sx3magatt8 sx3magatt9 sx3magatt10 sx3magatt11 sx3magatt12 sx3magatt13

$frame fakesxpain1 fakesxpain2 fakesxpain3 fakesxpain4

$frame fakesxdeath1 fakesxdeath2 fakesxdeath3 fakesxdeath4 fakesxdeath5 fakesxdeath6 fakesxdeath7 fakesxdeath8

// Giant 3 head spike wiz
$frame gsx3hover1 gsx3hover2 gsx3hover3 gsx3hover4 gsx3hover5 gsx3hover6 gsx3hover7 gsx3hover8
$frame gsx3hover9 gsx3hover10 gsx3hover11 gsx3hover12 gsx3hover13 gsx3hover14 gsx3hover15

$frame gsx3fly1 gsx3fly2 gsx3fly3 gsx3fly4 gsx3fly5 gsx3fly6 gsx3fly7 gsx3fly8 gsx3fly9 gsx3fly10
$frame gsx3fly11 gsx3fly12 gsx3fly13 gsx3fly14

$frame gsx3magatt1 gsx3magatt2 gsx3magatt3 gsx3magatt4 gsx3magatt5 gsx3magatt6 gsx3magatt7
$frame gsx3magatt8 gsx3magatt9 gsx3magatt10 gsx3magatt11 gsx3magatt12 gsx3magatt13

$frame fakelsxpain1 fakelsxpain2 fakelsxpain3 fakelsxpain4

$frame fakelsxdeath1 fakelsxdeath2 fakelsxdeath3 fakelsxdeath4 fakelsxdeath5 fakelsxdeath6 fakelsxdeath7 fakelsxdeath8


/*
==============================================================================

WIZARD

==============================================================================
*/

float W_LAVA = 2; // lava wixard
float W_POISON = 4; // poison wixard
float W_2HEAD = 8; // 2 heads
float W_SPIKE = 16; // xtra spikes
float W_LGSPIKE = 32; // large with xtra spikes
float W_3SPIKE = 64; // 3 heads xtra spikes
float W_SUP3SPIKE = 128; // super size 3 heads xtra spikes
//float W_UPG = 254; // any upgrade bit
//float W_UPGM = 240; // all mega upgrade bits - no 2 head, no lava, and no poison

//float wl_track = 0.6; // chance a shot will be tracker
//float wl_track_dmg = 20;  // damage done by tracker explode

/*
=============
LaunchMissile

If the player moves behind cover before the missile is launched, launch it
at the last visible spot with no velocity leading, in hopes that the player
will duck back out and catch it.

Sets the given entities velocity and angles so that it will hit self.enemy
if self.enemy maintains it's current velocity
0.1 is moderately accurate, 0.0 is totally accurate
=============
*/
void(entity missile, float mspeed, float accuracy) LaunchMissile =
{
	local	vector	vec, move;
	local	float	fly;

	makevectors (self.angles);

// set missile speed
	vec = self.enemy.origin + self.enemy.mins + self.enemy.size * 0.7 - missile.origin;

// calc aproximate time for missile to reach vec
	fly = vlen (vec) / mspeed;

// get the entities xy velocity
	move = self.enemy.velocity;
	move_z = 0;

// project the target forward in time
	vec = vec + move * fly;

	vec = normalize(vec);
	vec = vec + accuracy*v_up*(random()- 0.5) + accuracy*v_right*(random()- 0.5);

	missile.velocity = vec * mspeed;

	missile.angles = '0 0 0';
	missile.angles_y = vectoyaw(missile.velocity);

// set missile duration
	missile.nextthink = time + 5;
	missile.think = SUB_Remove;
	AddToSplash(missile); // *pk - Make this entity splash
};


void() wiz_run1;
void() wiz_side1;

/*
=================
WizardCheckAttack
=================
*/
float()	WizardCheckAttack =
{
	local vector	spot1, spot2;
	local entity	targ;

	if (time < self.attack_finished)
		return FALSE;
	if (!enemy_vis)
		return FALSE;

	if (enemy_range == RANGE_FAR)
	{
		if (self.attack_state != AS_STRAIGHT)
		{
			self.attack_state = AS_STRAIGHT;
			wiz_run1 ();
		}
		return FALSE;
	}

	targ = self.enemy;

// see if any entities are in the way of the shot
	spot1 = self.origin + self.view_ofs;
	spot2 = targ.origin + targ.view_ofs;

	traceline (spot1, spot2, FALSE, self);

	if (trace_ent != targ)
	{	// don't have a clear shot, so move to a side
		if (self.attack_state != AS_STRAIGHT)
		{
			self.attack_state = AS_STRAIGHT;
			wiz_run1 ();
		}
		return FALSE;
	}

	if (enemy_range == RANGE_MELEE)
		chance = 0.9;
	else if (enemy_range == RANGE_NEAR)
		chance = 0.6;
	else if (enemy_range == RANGE_MID)
		chance = 0.2;
	else
		chance = 0;

	if (random () < chance)
	{
		self.attack_state = AS_MISSILE;
		return TRUE;
	}

	if (enemy_range == RANGE_MID)
	{
		if (self.attack_state != AS_STRAIGHT)
		{
			self.attack_state = AS_STRAIGHT;
			wiz_run1 ();
		}
	}
	else
	{
		if (self.attack_state != AS_SLIDING)
		{
			self.attack_state = AS_SLIDING;
			wiz_side1 ();
		}
	}

	return FALSE;
};

/*
=================
WizardAttackFinished
=================
*/
void ()	WizardAttackFinished = // Cataboligne 9.17.3 - fixed this compiler warning
{
	if (enemy_range >= RANGE_MID || !enemy_vis)
	{
		self.attack_state = AS_STRAIGHT;
		self.think = wiz_run1;
	}
	else
	{
		self.attack_state = AS_SLIDING;
		self.think = wiz_side1;
	}
};

/*
==============================================================================

FAST ATTACKS

==============================================================================
*/

void() Wiz_FastFire =
{
	local vector		vec;
	local vector		dst;

	if (self.owner.health > 0)
	{
		self.owner.effects = self.owner.effects | EF_MUZZLEFLASH;

		makevectors (self.enemy.angles);
		dst = self.enemy.origin - 13*self.movedir;

		vec = normalize(dst - self.origin);
		launch_spike (self.origin, vec);
		newmis.owner = self.owner;

		if (self.spawnflags & W_LAVA)
		{
			setmodel (newmis, "progs/lavaball.mdl");
			newmis.classname = "fireballwep";

			if (self.wad == "BIG") // BOOM!
			{
				newmis.wad = self.wad;
				sound (self, CHAN_WEAPON, "chaos/incoming.wav", 1, ATTN_NORM);
				newmis.velocity = vec*600;
				newmis.frame = 20;
				newmis.dmg = 85;
				newmis.touch = T_MissileTouch; // rocket explosion
			}
			else
			{
				sound (self, CHAN_WEAPON, "boss1/throw.wav", 1, ATTN_NORM);
				newmis.velocity = vec * (700 + (ceil(3 * random()) * 100));
				newmis.frame = 22 + floor(random() * 1.4);
				newmis.touch = fire_fly_touch;
				newmis.dmg = 20;
			}
		}
		else
		{
			newmis.velocity = vec*600;
			sound (self, CHAN_WEAPON, "wizard/wattack.wav", 1, ATTN_NORM);
			newmis.classname = "wizspike";
			setmodel (newmis, "progs/w_spike.mdl");

			if (self.wad == "BIG") // BOOM!
			{
				newmis.wad = self.wad;
				newmis.velocity = vec*400;
				newmis.frame = 1;
				newmis.dmg = 40 + random() * 10;
				newmis.touch = T_MissileTouch; // rocket explosion
			}
		}
		setsize(newmis, v0, v0);
	}

	remove (self);
};


// Wiz fire repeating - some scragg get a lot more attacks

void(float wf_fwd, float wf_rt, vector wf_v, float wf_tm) Wiz_Firerep =
{
	newmis = spawn ();
	newmis.owner = self;
	newmis.spawnflags = self.spawnflags;
	newmis.nextthink = time + 1;
	setsize(newmis, v0, v0);
	setorigin (newmis, self.origin + wf_v + v_forward * wf_fwd + v_right * wf_rt);
	newmis.enemy = self.enemy;
	newmis.nextthink = time + wf_tm;
	newmis.think = Wiz_FastFire;
	if (wf_rt <= 0)
		newmis.movedir = v0 - v_right;
	else
		newmis.movedir = v_right;
};

void() Wiz_StartFast =
{
	local	entity	missile;

	sound (self, CHAN_WEAPON, "wizard/wattack.wav", 1, ATTN_NORM);
	self.v_angle = self.angles;
	makevectors (self.angles);

	missile = spawn ();
	missile.owner = self;
	missile.spawnflags = self.spawnflags;
	missile.nextthink = time + 0.6;
	setsize(newmis, v0, v0);
	setorigin (missile, self.origin + '0 0 30' + v_forward*14 + v_right*14);
	missile.enemy = self.enemy;
	missile.nextthink = time + 0.8;
	missile.think = Wiz_FastFire;
	missile.movedir = v_right;

	if (self.spawnflags & W_LAVA)
	if (random() < 0.08)
	{
		missile.wad = "BIG";
		return;
	}

	Wiz_Firerep(14, -14, '0 0 30', 0.3); // 2nd regular shot

	if ((self.spawnflags & W_SUP3SPIKE) || (self.spawnflags & W_LGSPIKE)) // larger 6 spiked
	{
		Wiz_Firerep(24, 12, '0 0 45', 0.3 + random() * 0.4);
		Wiz_Firerep(24, -12, '0 0 45', 0.2 + random() * 0.2);

		if (random() < 0.1) return;
		if (random() < 0.2) // boomers
			newmis.wad = "BIG";

		Wiz_Firerep(18, 18, '0 0 45', 0.7 + random() * 0.2); // idea - attack 2nd enemy
		if (random() < 0.2) // boomers
			newmis.wad = "BIG";

		Wiz_Firerep(18, -18, '0 0 45', 0.2 + random() * 0.1);		
	}
	else if ((self.spawnflags & W_SPIKE) || (self.spawnflags & W_3SPIKE)) // smaller 6 spiked
	{
		Wiz_Firerep(20, 8, '0 0 30', 0.3 + random() * 0.4);
		Wiz_Firerep(20, -8, '0 0 30', 0.2 + random() * 0.2);

		if (random() < 0.2) return;
		Wiz_Firerep(14, 14, '0 0 30', 0.3 + random() * 0.4); // idea - attack 2nd enemy
		if (random() < 0.2) // boomers
			newmis.wad = "BIG";

		Wiz_Firerep(14, -14, '0 0 30', 0.2 + random() * 0.2);
	}
	else if (self.spawnflags & W_2HEAD)
	{
		if (random() < 0.2) return;
		Wiz_Firerep(14, 14, '0 0 30', 0.3 + random() * 0.4);
		Wiz_Firerep(14, -14, '0 0 30', 0.4 + random() * 0.2);
	}

};



void() Wiz_idlesound =
{
local float wr;
	wr = random() * 5;

	if (self.waitmin < time)
	{
	 	self.waitmin = time + 2;
	 	if (wr > 4.5)
	 		sound (self, CHAN_VOICE, "wizard/widle1.wav", 1,  ATTN_IDLE);
	 	if (wr < 1.5)
	 		sound (self, CHAN_VOICE, "wizard/widle2.wav", 1, ATTN_IDLE);
	}
	return;
};


void()	wiz_stand1	=[	$hover1,	wiz_stand1	]
{
	if ((self.duration < $hover1) || (self.duration > $hover7))
	{
		self.duration = $hover1;
	}
	else self.duration = self.duration + 1;

	self.frame = self.duration;

	if (SV_MINEALLOW & CB_M_SCRAG)
	if (self.spawnflags & W_SUP3SPIKE)
	if (self.duration == $hover3) // only check on 1 frame out of 8
	if ((time & SV_CKTIME) == SV_CKTIME)
	if (random() < 0.5)
		SummonMonster(null_string);

	ai_stand();
};
/*

deprecated for loop code

void()	wiz_stand1	=[	$hover1,		wiz_stand2	] {ai_stand();};
void()	wiz_stand2	=[	$hover2,		wiz_stand3	] {ai_stand();};
void()	wiz_stand3	=[	$hover3,		wiz_stand4	] {ai_stand();};
void()	wiz_stand4	=[	$hover4,		wiz_stand5	] {ai_stand();};
void()	wiz_stand5	=[	$hover5,		wiz_stand6	] {ai_stand();};
void()	wiz_stand6	=[	$hover6,		wiz_stand7	] {ai_stand();};
void()	wiz_stand7	=[	$hover7,		wiz_stand8	] {ai_stand();};
void()	wiz_stand8	=[	$hover8,		wiz_stand1	] {ai_stand();};
*/

void()	wiz_walk1	=[	$hover1,	wiz_walk1	]
{
	if ((self.duration < $hover1) || (self.duration > $hover7))
	{
		self.duration = $hover1;
	}
	else self.duration = self.duration + 1;

	self.frame = self.duration;

	if (self.duration == $hover2) Wiz_idlesound();

	if (SV_MINEALLOW & CB_M_SCRAG)
	if (self.spawnflags & W_SUP3SPIKE)
	if (self.duration == $hover3)
	if ((time & SV_CKTIME) == SV_CKTIME)
		SummonMonster(null_string);

	ai_walk(self.waitmax);
};

/*

deprecated for loop code

void()	wiz_walk1	=[	$hover1,		wiz_walk2	] {ai_walk(8);
Wiz_idlesound();};
void()	wiz_walk2	=[	$hover2,		wiz_walk3	] {ai_walk(8);};
void()	wiz_walk3	=[	$hover3,		wiz_walk4	] {ai_walk(8);};
void()	wiz_walk4	=[	$hover4,		wiz_walk5	] {ai_walk(8);};
void()	wiz_walk5	=[	$hover5,		wiz_walk6	] {ai_walk(8);};
void()	wiz_walk6	=[	$hover6,		wiz_walk7	] {ai_walk(8);};
void()	wiz_walk7	=[	$hover7,		wiz_walk8	] {ai_walk(8);};
void()	wiz_walk8	=[	$hover8,		wiz_walk1	] {ai_walk(8);};
*/

void()	wiz_side1	=[	$hover1,	wiz_side1	]
{
	if ((self.duration < $hover1) || (self.duration > $hover7))
	{
		self.duration = $hover1;
	}
	else self.duration = self.duration + 1;

	self.frame = self.duration;

	if (self.duration == $hover2) Wiz_idlesound();

	ai_run(self.waitmax);
};

/*

deprecated for loop code

void()	wiz_side1	=[	$hover1,		wiz_side2	] {ai_run(8);
Wiz_idlesound();};
void()	wiz_side2	=[	$hover2,		wiz_side3	] {ai_run(8);};
void()	wiz_side3	=[	$hover3,		wiz_side4	] {ai_run(8);};
void()	wiz_side4	=[	$hover4,		wiz_side5	] {ai_run(8);};
void()	wiz_side5	=[	$hover5,		wiz_side6	] {ai_run(8);};
void()	wiz_side6	=[	$hover6,		wiz_side7	] {ai_run(8);};
void()	wiz_side7	=[	$hover7,		wiz_side8	] {ai_run(8);};
void()	wiz_side8	=[	$hover8,		wiz_side1	] {ai_run(8);};
*/

void()	wiz_run1	=[	$fly1,	wiz_run1	]
{
	if ((self.duration < $fly1) || (self.duration > $fly13))
	{
		self.duration = $fly1;
	}
	else self.duration = self.duration + 1;

	self.frame = self.duration;

	if (self.duration == $fly2) Wiz_idlesound();

	if (self.wad == "SUPER_XMAD")
	if ((time & SV_CKTIME) == SV_CKTIME)
	{
		self.count = cnt_ent(world, "owner",  "monster_wizard");
		self.count = self.count + cnt_ent(world, "owner",  "monster_spider");
		if (self.count < 4 + skill)
		{
			self.cnt = random();
			if (self.cnt < 0.45) SummonMonster("monster_wizard");
			else if (self.cnt < 0.55) SummonMonster("monster_spider");
		}
	}

	ai_run(self.waitmax * 2);
};

/*

deprecated for loop code

void()	wiz_run1	=[	$fly1,		wiz_run2	] {ai_run(16);
Wiz_idlesound();
};
void()	wiz_run2	=[	$fly2,		wiz_run3	] {ai_run(16);};
void()	wiz_run3	=[	$fly3,		wiz_run4	] {ai_run(16);};
void()	wiz_run4	=[	$fly4,		wiz_run5	] {ai_run(16);};
void()	wiz_run5	=[	$fly5,		wiz_run6	] {ai_run(16);};
void()	wiz_run6	=[	$fly6,		wiz_run7	] {ai_run(16);};
void()	wiz_run7	=[	$fly7,		wiz_run8	] {ai_run(16);};
void()	wiz_run8	=[	$fly8,		wiz_run9	] {ai_run(16);};
void()	wiz_run9	=[	$fly9,		wiz_run10	] {ai_run(16);};
void()	wiz_run10	=[	$fly10,		wiz_run11	] {ai_run(16);};
void()	wiz_run11	=[	$fly11,		wiz_run12	] {ai_run(16);};
void()	wiz_run12	=[	$fly12,		wiz_run13	] {ai_run(16);};
void()	wiz_run13	=[	$fly13,		wiz_run14	] {ai_run(16);};
void()	wiz_run14	=[	$fly14,		wiz_run1	] {ai_run(16);};
*/

void()	wiz_fast1	=[	$magatt1,		wiz_fast2	]
{
	ai_frame(self.walkframe);
	ai_face();

	Wiz_StartFast();
};

void()	wiz_fast2	=[	$magatt2,		wiz_fast3	] {ai_frame(self.walkframe);ai_face();};
void()	wiz_fast3	=[	$magatt3,		wiz_fast4	] {ai_frame(self.walkframe);ai_face();};
void()	wiz_fast4	=[	$magatt4,		wiz_fast5	] {ai_frame(self.walkframe);ai_face();};
void()	wiz_fast5	=[	$magatt5,		wiz_fast6	] {ai_frame(self.walkframe);ai_face();};
void()	wiz_fast6	=[	$magatt6,		wiz_fast7	] {ai_frame(self.walkframe);ai_face();};
void()	wiz_fast7	=[	$magatt5,		wiz_fast8	] {ai_frame(self.walkframe);ai_face();};
void()	wiz_fast8	=[	$magatt4,		wiz_fast9	] {ai_frame(self.walkframe);ai_face();};
void()	wiz_fast9	=[	$magatt3,		wiz_fast10	] {ai_frame(self.walkframe);ai_face();};
void()	wiz_fast10	=[	$magatt2,		wiz_run1	] {ai_frame(self.walkframe);ai_face();SUB_AttackFinished(2);WizardAttackFinished ();};


void()	wiz_pain1	=[	$pain1,		wiz_pain2	]
{
	self.duration = $pain1;
	self.frame = self.duration;
	ai_frame(self.walkframe);
};

void()	wiz_pain2	=[	$pain2,		wiz_pain2	]
{
	self.duration = self.duration + 1;
	self.frame = self.duration;

	ai_frame(self.walkframe);

	if (self.duration == $pain4) self.think = wiz_run1;
};

/*

deprecated for loop code

void()	wiz_pain1	=[	$pain1,		wiz_pain2	] {};
void()	wiz_pain2	=[	$pain2,		wiz_pain3	] {};
void()	wiz_pain3	=[	$pain3,		wiz_pain4	] {};
void()	wiz_pain4	=[	$pain4,		wiz_run1	] {};
*/
void() lavablob_die_explode8;

void()	wiz_death1	=[	$death1,		wiz_death2	]
{
	self.velocity_x = -200 + 400*random();
	self.velocity_y = -200 + 400*random();
	self.velocity_z = 100 + 100*random();
	self.flags = self.flags - (self.flags & FL_ONGROUND);
	sound (self, CHAN_VOICE, "wizard/wdeath.wav", 1, ATTN_NORM);

// fake death frames on 3 heads, 2 heads are "magically" gone
	if (self.spawnflags & (W_3SPIKE | W_SUP3SPIKE))
	{
		if (self.spawnflags & W_LAVA)
		{
			lavablob_die_explode8(); // boom!
			if (deathmatch) remove(self);
			return;
		}
/*		else
		{
			if (self.spawnflags & W_3SPIKE) self.walkframe = $sxhover1; // both these lop off 2 heads...idea - throw 2 scrag heads out
			if (self.spawnflags & W_SUP3SPIKE) self.walkframe = $lsxhover1;
		}
*/
	}

	self.duration = $death1;
	self.frame = self.duration;

	ai_frame(self.walkframe);
};

void()	wiz_death2	=[	$death2,		wiz_death2	]
{
	if (self.duration != $death8) self.duration = self.duration + 1;
	else self.think = SUB_Null; // drop out

	self.frame = self.duration;

	ai_frame(self.walkframe);

	if (self.duration == $death3) self.solid = SOLID_NOT;
};

/*
void()	wiz_death1	=[	$death1,		wiz_death2	] {

self.velocity_x = -200 + 400*random();
self.velocity_y = -200 + 400*random();
self.velocity_z = 100 + 100*random();
self.flags = self.flags - (self.flags & FL_ONGROUND);
sound (self, CHAN_VOICE, "wizard/wdeath.wav", 1, ATTN_NORM);
};
void()	wiz_death2	=[	$death2,		wiz_death3	] {};
void()	wiz_death3	=[	$death3,		wiz_death4	]{self.solid = SOLID_NOT;};
void()	wiz_death4	=[	$death4,		wiz_death5	] {};
void()	wiz_death5	=[	$death5,		wiz_death6	] {};
void()	wiz_death6	=[	$death6,		wiz_death7	] {};
void()	wiz_death7	=[	$death7,		wiz_death8	] {};
void()	wiz_death8	=[	$death8,		wiz_death8	] {};
*/

void() wiz_die =
{
	self.dmg = -40;
	if (self.wad == "SUPER") self.dmg = -200;

// check for gib
	if (self.health < self.dmg)
	{
		sound (self, CHAN_VOICE, "player/udeath.wav", 1, ATTN_NORM);
		ThrowHead ("progs/h_wizard.mdl", self.health);
		if (self.spawnflags & 160) // larger scrags - 32 & 128
			self.scale = 1.8;
		if (self.spawnflags & 200) // 2 & 3 head & 3 head super - 8, 64 & 128
		{
			ThrowGib ("progs/h_wizard.mdl", self.health);
			if (self.spawnflags & W_SUP3SPIKE) newmis.scale = 1.8; // 3 head lrg
			newmis.nextthink = time + 60 + random()*60;
		}
		if (self.spawnflags & 192) // both 3 heads - 64 & 128
		{
			ThrowGib ("progs/h_wizard.mdl", self.health);
			if (self.spawnflags & W_SUP3SPIKE) newmis.scale = 1.8; // 3 head lrg
			newmis.nextthink = time + 60 + random()*60;
		}
		ThrowGib ("progs/gib2.mdl", self.health);
		ThrowGib ("progs/gib2.mdl", self.health);
		ThrowGib ("progs/gib2.mdl", self.health);
		return;
	}

	wiz_death1 ();
};


void(entity attacker, float damage) Wiz_Pain =
{
	sound (self, CHAN_VOICE, "wizard/wpain.wav", 1, ATTN_NORM);
	if (random()*70 > damage)
		return;		// didn't flinch

	if (self.spawnflags & W_3SPIKE) return; // fake pain frames - not using
	if (self.spawnflags & W_SUP3SPIKE) return;

	wiz_pain1 ();
};


void() Wiz_Missile =
{
	wiz_fast1();
};

/*QUAKED monster_wizard (1 0 0) (-16 -16 -24) (16 16 40) Ambush Lava Poison Twohead Spike LargeSpike TripleSpike ExlTripleSpike

"Lava" - lava skin scragg, shoots lava balls, more health, faster, badder
"Poison" - Toxic Green skin scragg, shoots poison tracers, more health

Note: any of these can be lava or poison
"TwoHead" - two heads are better than one, double health, double attacks
"Spike" - extra spikes, extra health, extra attacks, more magic
"LargeSpike" - larger more badass version of spike scragg
"TripleSpike" - Three headed spike scragg - triple spike health, 6x attacks, 
"SupsTripleSpike" - Super Three headed spike scragg - monster id card says "bad-ass motherfucker"

*/

float wl_lava = 0.25; // chance of any upgrade going lava
//float wl_2head = 0.85; // chance of two head upgrade - because upgrade is auto 2 head
float wl_spike = 0.6; // chance of spike upgrade
float wl_lgspike = 0.3; // chance of large spike upgrade
float wl_3spike = 0.2; // chance of 3 head spike upgrade
float wl_sup3spike = 0.05; // chance of super 3 head spike upgrade

//float wl_rnd = 0.8; // total chance for a better random wixard
//float wl_imp = 0.1; // total chance for a better map wixard
float rnd_super_spike3; // limited number of these will appear

/*
overall chances:
	map wizard - 10%
	rnd wizard - 80%
	go lava - 25%

upgrade breakdown:
	40%	- 2 head
	30%	- spike
	10%	- large spike
	15%	- 3 head spike
	5% 	- super 3 head spike
*/

void(float ign) monster_wizard =
{

if (ign != A_MONSTER)
{
	if (M_MONSTER < 0)
	{
		self.think = remove_monster;
		self.nextthink = time + 2 + (random() * REMOVE_MON_SPREAD);
		return;
	}
	
	if (!M_MONSTER & CB_M_SCRAG)
	if (deathmatch)
	{
		if (R_MONSTER)
			remove(self);
		return;
	}

// make some more random monsters according to server rules - only do this on map spawned monsters, wont happen with random monsters
	if (R_FAST_MONSTER & CB_M_SCRAG)
	if (random() < C_FS_MONSTER)
		speed_monster(CFAST, "monster_wizard", self.origin);
		
	if (R_SLOW_MONSTER & CB_M_SCRAG)
	if (random() < C_FS_MONSTER)
		speed_monster(CSLOW, "monster_wizard", self.origin);

	precache_model ("progs/wizard.mdl");
	precache_model ("progs/h_wizard.mdl");
	precache_model ("progs/w_spike.mdl");

	precache_sound ("wizard/hit.wav");		// used by c code
	precache_sound ("wizard/wattack.wav");
	precache_sound ("wizard/wdeath.wav");
	precache_sound ("wizard/widle1.wav");
	precache_sound ("wizard/widle2.wav");
	precache_sound ("wizard/wpain.wav");
	precache_sound ("wizard/wsight.wav");
// lava
	precache_sound ("chaos/incoming.wav");
}

// Cataboligne - 11.14.12 - fast / slow code
	if (self.speed <= 0) self.speed = MON_NORM;
	self.lip = 1; // local speed divisor
// map specced
	if (self.netname == CFAST) self.speed = MON_FAST;
	else if (self.netname == CSLOW) self.speed = MON_SLOW;

// server controls set all monsters fast or slow if not specced - this includes random monsters
	else if (FAST_MONSTER & CB_M_SCRAG) self.speed = MON_FAST;
	else if (SLOW_MONSTER & CB_M_SCRAG) self.speed = MON_SLOW;

	self.netname = "Scragg";

	self.solid = SOLID_SLIDEBOX;
	self.movetype = MOVETYPE_STEP;
	self.walkframe = 0;
	self.waitmax = 8;

	setmodel (self, "progs/wizard.mdl");

	setsize (self, '-16 -16 -24', '16 16 40');
	self.health = 80;

	self.th_stand = wiz_stand1;
	self.th_walk = wiz_walk1;
	self.th_run = wiz_run1;
	self.th_missile = Wiz_Missile;
	self.th_pain = Wiz_Pain;
	self.th_die = wiz_die;

	enhance = FALSE;

#ifdef enhanced
//	if (ENHANCED)
	if (ENH_Q1_MAP_MONSTERS || (ign == A_MONSTER))
		enhance = TRUE;
#endifdef

	if ((enhance) || (self.spawnflags & 254)) // W_UPG))
	{
		chance = 0.1; // wl_imp;
		if (skill == 3) chance = 0.4; // wl_imp + wl_imp;
		if (ign == A_MONSTER) chance = 0.8; // wl_rnd;

		if (!self.spawnflags & 254) // W_UPG) // not map specced - enhance him
		if (random() < chance)
		{
			enhance = W_2HEAD;
	
			chance = random(); // pick an upgrade
			if ((chance < wl_sup3spike) && (rnd_super_spike3 < (skill + 1))) enhance = W_SUP3SPIKE;
			else if (chance < wl_3spike) enhance = W_3SPIKE;
			else if (chance < wl_lgspike) enhance = W_LGSPIKE;
			else if (chance < wl_spike) enhance = W_SPIKE;

			self.spawnflags = self.spawnflags | enhance;

// any upgrade can get lava added
			if (random() < wl_lava)
				self.spawnflags = self.spawnflags | W_LAVA;
		}

		if (self.spawnflags & W_SUP3SPIKE)
		{
			self.health = 800;
			self.walkframe = $gsx3hover1;
			self.waitmax = 16;
			self.wad = "SUPER_XMAD";
			rnd_super_spike3 = rnd_super_spike3 + 1;
			setsize (self, '-24 -24 -44', '24 24 60');
		}
		else if (self.spawnflags & W_LGSPIKE)
		{
			self.health = 480;
			self.walkframe = $lsxhover1;
			self.waitmax = 16;
			self.wad = "SUPER";
			setsize (self, '-24 -24 -44', '24 24 60');
		}
		else if (self.spawnflags & W_3SPIKE)
		{
			self.health = 280;
			self.walkframe = $sx3hover1;
			self.waitmax = 10;
			self.wad = "SUPER";
		}
		else if (self.spawnflags & W_SPIKE)
		{
			self.health = 180;
			self.walkframe = $sxhover1;
			self.wad = "MEGA";
		}
		else if (self.spawnflags & W_2HEAD)
		{
			self.health = 120;
			self.walkframe = $thhover1;
		}

		if (self.spawnflags & W_LAVA)
		{
			self.skin = 1;
			if (!self.spawnflags & 240) // W_UPGM) // normal or 2 head had lava added
			{
				self.health = 160;
				if (random() < 0.25) self.health = 200 + random() * 100;
			}
			self.wad = "MEGA";
		}
	}

	flymonster_start ();
};
